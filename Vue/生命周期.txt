生命周期
    每个Vue实例在被创建时都要经过一系列的初始化过程——例如，需要设置数据监听、编译模板
    将实例挂载到 DOM 并在数据变化时更新 DOM 等,这个过程中也会运行一些叫做生命周期钩子的函数
    这给了用户在不同阶段添加自己的代码的机会
    开始创建、初始化数据、编译模板、挂载DOM、渲染-->更新-->渲染到卸载
    初始化一个Vue空的实例对象，只有默认的生命周期函数和一些事件，其它都未创建
    生命周期钩子的 this 上下文指向调用它的 Vue 实例
    不要在选项属性或回调上使用箭头函数
    因为箭头函数并没有 this，this 会作为变量一直向上级词法作用域查找，直至找到为止，经常导致错误
    1.beforeCreate(){}
        第一个生命周期函数，实例创建之前就执行它
        在beforeCreate执行的时候，data和methods中的数据还没初始化
    2.created(){}
        第二个生命周期函数
        在created中，data和methods都已经被初始化 
    3.beforeMount(){}
        第三个生命周期函数，模板已经编译完成，没有渲染到页面中,页面还是旧的
    4.mounted(){}
        第四个生命周期函数，挂载完成，用户可以看见渲染好的页面，实例创建好了运行中的两个事件
    5.beforeUpdate(){}
        界面未被更新，数据被更新,界面和数据未同步
    6.updated(){}
        页面和数据保持同步
    7.beforeDestroy(){}
        都处于可用状态，没有真正销毁
    8.destroyed(){}
        组件被完全销毁