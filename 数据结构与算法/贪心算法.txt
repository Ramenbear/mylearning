贪心算法（Greedy Algorithm) 简介

贪心算法，又名贪婪法，是寻找最优解问题的常用方法，这种方法模式一般将求解过程分成若干个步骤，
但每个步骤都应用贪心原则，选取当前状态下最好/最优的选择（局部最有利的选择），
并以此希望最后堆叠出的结果也是最好/最优的解。{看着这个名字，贪心，贪婪这两字的内在含义最为关键。
这就好像一个贪婪的人，他事事都想要眼前看到最好的那个，看不到长远的东西，也不为最终的结果和将来着想，
贪图眼前局部的利益最大化，有点走一步看一步的感觉。}

贪婪法的基本步骤：

步骤1：从某个初始解出发；
步骤2：采用迭代的过程，当可以向目标前进一步时，就根据局部最优策略，得到一部分解，缩小问题规模；
步骤3：将所有解综合起来。

贪心算法必须具备后无效性，也就是不必考虑前面的影响，只需考虑当前的状态
var isSubsequence = function(s, t) {
    
    let flag=true;
        
    for(let j=0;j<s.length;j++){
        let i=t.indexOf(s[j]);
        if(i>-1){
            t=t.substr(i+1)
        }else{
            flag=false
            break;
        } 
    }   
    return flag
};